{"version":3,"sources":["webpack:///./src/app/fazer-login/fazer-login.module.ts","webpack:///./src/app/fazer-login/fazer-login.page.html","webpack:///./src/app/fazer-login/fazer-login.page.scss","webpack:///./src/app/fazer-login/fazer-login.page.ts"],"names":[],"mappings":"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","file":"fazer-login-fazer-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FazerLoginPage } from './fazer-login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FazerLoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [FazerLoginPage]\n})\nexport class FazerLoginPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Pré-Inscrição</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\n    <ion-row class=\\\"login-form\\\">\\n      <ion-col>\\n            <!-- ion-list inset class=\\\"no-border\\\"-->\\n\\t    <div>\\n \\n              <ion-item>\\n                <ion-label><ion-icon name=\\\"person\\\"></ion-icon></ion-label>\\n                <ion-input [(ngModel)]=\\\"username\\\" placeholder=\\\"nome\\\" type=\\\"text\\\"></ion-input>\\n              </ion-item>\\n \\n              <ion-item>\\n                <ion-label><ion-icon name=\\\"lock\\\"></ion-icon></ion-label>\\n                <ion-input [(ngModel)]=\\\"password\\\" placeholder=\\\"senha\\\" type=\\\"password\\\"></ion-input>\\n              </ion-item>\\n \\n            <!--/ion-list-->\\n\\t    </div>\\n\\n\\t    <!-- button ion-button class=\\\"login-button\\\" (click)=\\\"login()\\\">Entrar</button-->\\n\\t    <ion-button (click)=\\\"login()\\\" shape=\\\"round\\\" fill=\\\"solid\\\" secondary class=\\\"login-button\\\">Entrar\\n\\t    </ion-button>\\n        </ion-col>\\n    </ion-row>\\n \\n    <!-- ion-row>\\n      <ion-col>\\n\\t<div (click)=\\\"launchSignup()\\\" class=\\\"create-account\\\">\\n          <span>Ou crie sua conta aqui.</span>\\n        </div>\\n      </ion-col>\\n    </ion-row-->\\n\\n  \\n</ion-content>\\n\"","module.exports = \"ion-content {\\n  background-color: var(--ion-color-light); }\\n  ion-content scroll-content {\\n    display: flex;\\n    flex-direction: column; }\\n  ion-content ion-row {\\n    align-items: center;\\n    text-align: center; }\\n  ion-content ion-item {\\n    border-radius: 30px !important;\\n    padding-left: 10px !important;\\n    margin-bottom: 10px;\\n    background-color: #fff;\\n    opacity: 0.7;\\n    font-size: 0.9em; }\\n  ion-content ion-list {\\n    margin: 0; }\\n  ion-content .login-logo {\\n    flex: 2; }\\n  ion-content .login-form {\\n    flex: 1; }\\n  ion-content .create-account {\\n    color: #fff;\\n    text-decoration: underline;\\n    background: none;\\n    font-size: 0.9em; }\\n  ion-content .login-button {\\n    width: 100%;\\n    border-radius: 30px !important;\\n    padding-left: 10px !important;\\n    margin-bottom: 10px;\\n    font-size: 0.9em;\\n    color: #fff;\\n    background-color: transparent;\\n    border: 1px solid #fff; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AlertController, NavController } from '@ionic/angular';\nimport { PersonService } from '../services/person.service';\nimport { Person }        from '../interfaces/person';\n\n@Component({\n  selector: 'app-fazer-login',\n  templateUrl: './fazer-login.page.html',\n  styleUrls: ['./fazer-login.page.scss'],\n})\nexport class FazerLoginPage implements OnInit {\n\n    public backgroundImage = 'assets/img/background/background-5.jpg';\n    public username: string;\n    public password: string;\n\n\n    constructor(private personService: PersonService,\n\t\tprivate alertCtrl: AlertController,\n\t        private navCtrl: NavController) {\n\n    }\n    \n    ngOnInit() {\n    }\n\n    async alertUserAuthFailure(msg: string) {\n\tconst alert = await this.alertCtrl.create({\n\t    header: 'Acesso',\n\t    subHeader: 'Informação',\n\t    message: msg,\n\t    buttons: ['OK']\n\t});\n\n\tawait alert.present();\n    }\n    \n    login() {\n\tlet credentials = {\n\t    email:         this.username,\n\t    senha:         this.password\n\t};\n\n\tconsole.log(\"Iniciando autenticação...\");\n\tthis.personService.doAuthenticateLogin(credentials)\n\t    .subscribe(\n\t\t(person: Person) => {\n\t\t    console.log(\"Auth Ok: \" + person.email);\n\t\t    this.personService.persistPersonLocally(person);\n\t\t    this.navCtrl.navigateRoot('/NovoCadastro');\n\t\t},\n\t\t(err) => {\n\t\t    console.log(err);\n\t\t    if (err.status == 401) {\n\t\t\tthis.alertUserAuthFailure(\"Email ou senha inválidos\");\n\t\t    } else {\n\t\t\tthis.alertUserAuthFailure(\"Usuário inexistente\");\n\t\t    }\n\t\t}\n\t    );\n\n    }\n\n}\n"],"sourceRoot":""}